blueprint:
  name: "Raumlüftungsempfehlung Komplett (Feuchte + CO₂ + Anwesenheit, optional Fenster)"
  description: "Raumweise Lüftungsempfehlung und Fenster-Schließen-Empfehlung basierend auf relativer und absoluter Luftfeuchtigkeit, optional CO₂, Fensterstatus (optional), Anwesenheit, Sommer-/Winterlogik und Smart Reset."
  domain: automation

  input:
    indoor_humidity:
      name: "Relative Luftfeuchtigkeit Innen"
      selector:
        entity:
          domain: sensor
    indoor_absolute:
      name: "Absolute Luftfeuchtigkeit Innen (g/m³)"
      selector:
        entity:
          domain: sensor
    outdoor_absolute:
      name: "Absolute Luftfeuchtigkeit Außen (g/m³)"
      selector:
        entity:
          domain: sensor
    window_sensors:
      name: "Fenstersensor(en) (optional)"
      description: "Wähle alle Fenster dieses Raumes (kann leer bleiben)"
      default: []
      selector:
        entity:
          domain: binary_sensor
          device_class: window
          multiple: true
    notify_device:
      name: "Benachrichtigungsgerät"
      selector:
        device:
          integration: mobile_app
    presence_sensor:
      name: "Anwesenheitssensor (optional)"
      description: "Prüft, ob jemand zuhause ist."
      default: ""
      selector:
        entity:
          domain: binary_sensor
          device_class: occupancy
          multiple: false
    threshold_relative:
      name: "Rel. LF-Schwelle (%)"
      default: 60
      selector:
        number:
          min: 40
          max: 80
          step: 1
          mode: slider
    threshold_difference:
      name: "Absolute LF-Differenz Schwelle (g/m³)"
      default: 3
      selector:
        number:
          min: 0
          max: 10
          step: 0.1
    co2_sensor:
      name: "Optionaler CO₂-Sensor"
      default: ""
      selector:
        entity:
          domain: sensor
          device_class: carbon_dioxide
          multiple: false
    co2_threshold:
      name: "CO₂-Schwelle (ppm)"
      default: 1200
      selector:
        number:
          min: 400
          max: 2000
          step: 50
    min_vent_duration:
      name: "Mindest-Lüftungsdauer (Minuten)"
      default: 10
      selector:
        number:
          min: 1
          max: 60
          step: 1
    repeat_interval:
      name: "Wiederholintervall (Minuten)"
      default: 30
      selector:
        number:
          min: 5
          max: 120
          step: 5
    critical_push:
      name: "Kritische Push-Nachricht aktivieren?"
      description: "Optional: iOS-Ton/Vibration trotz Stummschaltung"
      default: false
      selector:
        boolean:
    create_status_entity:
      name: "Status-Entity erstellen?"
      description: "Zeigt den letzten Lüftungsstatus pro Raum"
      default: false
      selector:
        boolean:
    time_start:
      name: "Start Zeitfenster"
      default: "06:00"
      selector:
        time:
    time_end:
      name: "End Zeitfenster"
      default: "22:00"
      selector:
        time:

mode: restart

trigger:
  - platform: state
    entity_id: !input.indoor_humidity
  - platform: state
    entity_id: !input.indoor_absolute
  - platform: state
    entity_id: !input.outdoor_absolute
  - platform: state
    entity_id: !input.window_sensors
  - platform: state
    entity_id: !input.co2_sensor
  - platform: state
    entity_id: !input.presence_sensor

variables:
  rh_in: "{{ states(!input.indoor_humidity) | float(0) }}"
  abs_in: "{{ states(!input.indoor_absolute) | float(0) }}"
  abs_out: "{{ states(!input.outdoor_absolute) | float(0) }}"
  diff: "{{ abs_in - abs_out }}"
  co2: >
    {% if !input.co2_sensor != '' %}
      {{ states(!input.co2_sensor) | float(0) }}
    {% else %}
      0
    {% endif %}
  window_open: >
    {% if !input.window_sensors | length > 0 %}
      {{ expand(!input.window_sensors) | selectattr('state','eq','on') | list | count > 0 }}
    {% else %}
      false
    {% endif %}
  high_humidity: >
    {{ rh_in > (!input.threshold_relative | float) and diff > (!input.threshold_difference | float) }}
  bad_co2: >
    {% if !input.co2_sensor != '' %}
      {{ co2 > (!input.co2_threshold | float) }}
    {% else %}
      false
    {% endif %}
  summer_block: >
    {{ abs_out > 14 and abs_out >= abs_in }}
  someone_home: >
    {% if !input.presence_sensor != '' %}
      {{ states(!input.presence_sensor) == 'on' }}
    {% else %}
      true
    {% endif %}
  within_time: >
    {% set now_time = now().strftime('%H:%M') %}
    {{ now_time >= !input.time_start and now_time <= !input.time_end }}
  should_vent: >
    {{ within_time and someone_home and not summer_block and (high_humidity or bad_co2) and not window_open }}
  should_close: >
    {{ window_open and (diff < 1 or rh_in < 55 or abs_in > abs_out) }}
  warn_window_open_absent: >
    {{ not someone_home and window_open and (!input.window_sensors | length > 0) }}

action:
  - choose:
      - conditions: "{{ should_vent }}"
        sequence:
          - device_id: !input.notify_device
            domain: mobile_app
            type: notify
            data:
              message: >
                "Lüften empfohlen! Innen: {{ rh_in | round(1) }} % rF, Differenz: {{ diff | round(1) }} g/m³, CO₂: {% if !input.co2_sensor != '' %}{{ co2 | round(0) }} ppm{% else %}nicht gemessen{% endif %}"
              title: "{% if not !input.critical_push %}Lüften{% else %}Lüften (kritisch){% endif %}"
          - delay:
              minutes: !input.repeat_interval
          - continue_on_error: true
      - conditions: "{{ should_close }}"
        sequence:
          - delay:
              minutes: !input.min_vent_duration
          - device_id: !input.notify_device
            domain: mobile_app
            type: notify
            data:
              message: >
                "Fenster schließen empfohlen! Innen: {{ rh_in | round(1) }} % rF, Differenz: {{ diff | round(1) }} g/m³"
              title: "{% if not !input.critical_push %}Fenster schließen{% else %}Fenster schließen (kritisch){% endif %}"
      - conditions: "{{ warn_window_open_absent }}"
        sequence:
          - device_id: !input.notify_device
            domain: mobile_app
            type: notify
            data:
              message: "Achtung: Fenster noch offen, während niemand zuhause ist!"
              title: "{% if not !input.critical_push %}Fenster offen{% else %}Fenster offen (kritisch){% endif %}"
  - choose:
      - conditions: "{{ !input.create_status_entity }}"
        sequence: []
      - conditions: "{{ not !input.create_status_entity }}"
        sequence:
          - service: input_text.set_value
            data:
              entity_id: input_text.lueftung_status
              value: >
                {% if should_vent %}Lüften empfohlen{% elif should_close %}Schließen empfohlen{% elif warn_window_open_absent %}Fenster offen{% else %}Keine Aktion{% endif %}
